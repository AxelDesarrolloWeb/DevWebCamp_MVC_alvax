{"version":3,"sources":["horas.js","ponentes.js","tags.js"],"names":["document","querySelector","busqueda","categoria_id","dia","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","terminoBusqueda","e","target","name","value","horaPrevia","classList","remove","Object","values","includes","async","url","resultado","fetch","json","obtenerHorasDisponibles","buscarEventos","listadoHoras","forEach","li","add","horasTomadas","eventos","map","evento","hora_id","Array","from","filter","dataset","horaId","hora","addEventListener","seleccionarHora","ponentesInput","ponentes","ponentesFiltrados","listadoPonentes","ponenteHidden","seleccionarPonente","ponente","ponentePrevio","ponenteId","arrayPonentes","nombre","trim","apellido","id","formatearPonentes","obtenerPonentes","lenght","expresion","RegExp","toLowerCase","search","firstChild","removeChild","length","ponenteHTML","createElement","textContent","onclick","appendChild","noResultados","mostrarPonentes","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function() {\r\n    const horas = document.querySelector('#horas');\r\n\r\n    if(horas) {\r\n        let busqueda = {\r\n            categoria_id: '',\r\n            dia: ''\r\n        }\r\n\r\n        const categoria = document.querySelector('[name=\"categoria_id\"]');\r\n        const dias = document.querySelectorAll('[name=\"dia\"]');\r\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n\r\n        categoria.addEventListener('change', terminoBusqueda);\r\n        dias.forEach(dia => dia.addEventListener('change', terminoBusqueda));\r\n\r\n        function terminoBusqueda(e) {\r\n            busqueda[e.target.name] = e.target.value;\r\n            // Reiniciar los campos ocultos y el selector de horas\r\n            inputHiddenHora.value = '';\r\n            inputHiddenDia.value = '';\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n            if (horaPrevia) {\r\n                horaPrevia.classList.remove('horas__hora--seleccionada');\r\n            }\r\n\r\n            // inputHiddenDia.value = e.target.value;\r\n\r\n            if(Object.values(busqueda).includes('')) {\r\n                return ;\r\n            } \r\n\r\n            buscarEventos();\r\n        }\r\n\r\n        async function buscarEventos() {\r\n\r\n            const {dia,categoria_id} = busqueda;\r\n            const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n\r\n            const resultado = await fetch(url);\r\n            const eventos = await resultado.json();\r\n\r\n\r\n            obtenerHorasDisponibles();\r\n\r\n        }\r\n\r\n        function obtenerHorasDisponibles() {\r\n            // Reiniciar las horas\r\n            const listadoHoras = document.querySelectorAll('#horas li');\r\n            listadoHoras.forEach(li => li.classList.add('horas__hora--deshabilitada'));\r\n            \r\n            // Comprobar los eventos ya tomados, y quitar la variable de deshabilitado\r\n            const horasTomadas = eventos.map( evento => evento.hora_id);\r\n            const listadoHorasArray = Array.from(listadoHoras);\r\n            \r\n            const resultado = listadoHorasArray.filter(li => !horasTomadas.includes(li.dataset.horaId));\r\n            resultado.forEach(li => li.classList.remove('horas__hora--deshabilitada'));\r\n\r\n\r\n            const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');\r\n            horasDisponibles.forEach( hora => hora.addEventListener('click', seleccionarHora));\r\n            // console.log(horasDisponibles);\r\n        }\r\n\r\n        function seleccionarHora(e) {\r\n\r\n            // Deshabilitar la hora previa, si hay un nuevo click\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n            if(horaPrevia) {\r\n                horaPrevia.classList.remove('horas__hora--seleccionada');\r\n            }\r\n\r\n            // Agregar clase de seleccionado\r\n            e.target.classList.add('horas__hora--seleccionada');\r\n\r\n            inputHiddenHora.value = e.target.dataset.horaId;\r\n\r\n            // Llenar el campo oculto de dia\r\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value;\r\n        }\r\n     }\r\n})();","(function () {\r\n  const ponentesInput = document.querySelector(\"#ponentes\");\r\n\r\n  if (ponentesInput) {\r\n    let ponentes = [];\r\n    let ponentesFiltrados = [];\r\n\r\n    const listadoPonentes = document.querySelector(\"#listado-ponentes\");\r\n    const ponenteHidden = document.querySelector('[name=\"ponente_id\"]');\r\n\r\n    obtenerPonentes();\r\n\r\n    ponentesInput.addEventListener(\"input\", buscarPonentes);\r\n\r\n    async function obtenerPonentes() {\r\n      const url = `/api/ponentes`;\r\n\r\n      const respuesta = await fetch(url);\r\n      const resultado = await resultado.json();\r\n      formatearPonentes(resultado);\r\n    }\r\n\r\n    function formatearPonentes(arrayPonentes = []) {\r\n      ponentes = arrayPonentes.map((ponente) => {\r\n        return {\r\n          nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\r\n          id: ponente.id,\r\n        };\r\n      });\r\n    }\r\n\r\n    function buscarPonentes(e) {\r\n      const busqueda = e.target.value;\r\n      if (busqueda.lenght > 3) {\r\n        const expresion = new RegExp(busqueda, \"i\");\r\n        ponentesFiltrados = ponentes.filter((ponente) => {\r\n          if (ponente.nombre.toLowerCase().search(expresion) != -1) {\r\n            return ponente;\r\n          }\r\n        });\r\n      } else {\r\n        ponentesFiltrados = [];\r\n      }\r\n\r\n      mostrarPonentes();\r\n    }\r\n\r\n    function mostrarPonentes() {\r\n      // listadoPonentes.innerHTML = '';  --- Peor performance\r\n\r\n      while (listadoPonentes.firstChild) {\r\n        listadoPonentes.removeChild(listadoPonentes.firstChild);\r\n      }\r\n\r\n      if (ponentesFiltrados.length > 0) {\r\n        ponentesFiltrados.forEach((ponente) => {\r\n          const ponenteHTML = document.createElement(\"LI\");\r\n          ponenteHTML.classList.add(\"listado-ponentes__ponente\");\r\n          ponenteHTML.textContent = ponente.nombre;\r\n          ponenteHTML.dataset.ponenteId = ponente.id;\r\n          ponenteHTML.onclick = seleccionarPonente;\r\n          \r\n\r\n          // Añadir al DOM\r\n          listadoPonentes.appendChild(ponenteHTML);\r\n        });\r\n      } else {\r\n        const noResultados = document.createElement('P');\r\n        noResultados.classList.add('listado-ponentes__no-resultado');\r\n        noResultados.textContent = 'No hay resultados para tu búsqueda';\r\n\r\n        listadoPonentes.appendChild(noResultados);\r\n      }\r\n    }\r\n\r\n    function seleccionarPonente(e) {\r\n        const ponente = e.target;\r\n        \r\n        // Remover la clase previa\r\n        const ponentePrevio = document.querySelector('listado-ponentes__ponente--seleccionado');\r\n        if(ponentePrevio) {\r\n            ponentePrevio.classList.remove('listado-ponentes__ponente--seleccionado');\r\n        }\r\n        \r\n        ponente.classList.add('listado-ponentes__ponente--seleccionado');\r\n\r\n        ponenteHidden.value = ponente.dataset.ponenteId;\r\n    }\r\n  }\r\n})();\r\n","(function() {\r\n\r\n    const tagsInput = document.querySelector('#tags_input');\r\n\r\n    if(tagsInput) {\r\n\r\n        const tagsDiv = document.querySelector('#tags');\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n\r\n        let tags = [];\r\n\r\n        // Recuperar del input oculto\r\n        if(tagsInputHidden.value !== '') {\r\n            tags = tagsInputHidden.value.split(',');\r\n            mostrarTags();\r\n        }\r\n \r\n        // Escuchar los cambios en el input\r\n        tagsInput.addEventListener('keypress', guardarTag);\r\n\r\n        function guardarTag(e) {\r\n            if(e.keyCode === 44) {\r\n                if(e.target.value.trim() === '' || e.target.value < 1) { \r\n                    return;\r\n                };\r\n                e.preventDefault();\r\n                tags = [...tags, e.target.value.trim()];\r\n                tagsInput.value = '';\r\n                mostrarTags();\r\n            }\r\n        }\r\n\r\n        function mostrarTags() {\r\n            tagsDiv.textContent = '';\r\n            tags.forEach(tag => {\r\n                const etiqueta = document.createElement('LI');\r\n                etiqueta.classList.add('formulario__tag');\r\n                etiqueta.textContent = tag;\r\n                etiqueta.ondblclick = eliminarTag;\r\n                tagsDiv.appendChild(etiqueta);\r\n            })\r\n            actualizarInputHidden();\r\n        }   \r\n\r\n        function eliminarTag(e) {\r\n            e.target.remove();\r\n            tags = tags.filter(tag => tag !== e.target.textContent);\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function actualizarInputHidden() {\r\n           tagsInputHidden.value = tags.toString();\r\n        }\r\n    }\r\n\r\n})();"]}